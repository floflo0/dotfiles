#!/usr/bin/bash

set -e

# Usage: music-selector [OPTIONS]
#
# Choose music to play using rofi.
#
# Options:
#   --generate-cache  Generate thumbnails, songs list and albums list
#   -h, --help        Print this help message.

# Config
ROFI_PARAM="-i -matching fuzzy"
MUSIC_PLAYER="amberol"
DEFAULT_ICON="folder-music"
ICON_SIZE=24

MUSIC_DIR=$(xdg-user-dir MUSIC)
if [ -z $XDG_CACHE_HOME ]; then
    XDG_CACHE_HOME="${HOME}/.cache"
fi
CACHE_DIR="${XDG_CACHE_HOME}/music-selector"
ROFI_ALBUMS_INPUT="${CACHE_DIR}/albums"
ROFI_SONGS_INPUT="${CACHE_DIR}/songs"
THUMBS_CACHE_DIR="${XDG_CACHE_HOME}/music-selector/thumbs"

PROGRAM_NAME=$(basename $0)

log() {
    echo "${PROGRAM_NAME}:" $@
}

list_albums() {
    find "$MUSIC_DIR" -maxdepth 2 -mindepth 2 -type d | sort
}

list_songs() {
    find "$MUSIC_DIR" -mindepth 3 -type f -name "*.mp3" | sort
}

generate_rofi_albums_input() {
    IFS=$'\n'
    if [ -f "$ROFI_ALBUMS_INPUT" ]; then
        rm --verbose "$ROFI_ALBUMS_INPUT"
    else
        mkdir --parents --verbose "$CACHE_DIR"
        touch "$ROFI_ALBUMS_INPUT"
    fi
    for album in $(list_albums); do
        album_name=$(basename "$album")
        fist_song_name=$(basename $(find "$album" -type f -name "01*"))
        icon="${THUMBS_CACHE_DIR}/${fist_song_name}.jpg"
        if [ ! -f $icon ]; then
            icon="$DEFAULT_ICON"
        fi
        echo -en "${album_name}\0icon\x1f${icon}\n" >> "$ROFI_ALBUMS_INPUT"
    done
}

generate_rofi_songs_input() {
    IFS=$'\n'
    if [ -f "$ROFI_SONGS_INPUT" ]; then
        rm --verbose "$ROFI_SONGS_INPUT"
    else
        mkdir --parents --verbose "$CACHE_DIR"
        touch "$ROFI_SONGS_INPUT"
    fi
    for song in $(list_songs); do
        song_name=$(basename "$song")
        artist=$(basename $(dirname $(dirname "$song")))
        displayed_song_name="${song_name#*- }"
        displayed_song_name="${artist} | ${displayed_song_name%.mp3}"
        icon="${THUMBS_CACHE_DIR}/${song_name}.jpg"
        if [ ! -f $icon ]; then
            icon="$DEFAULT_ICON"
        fi
        echo -en "${displayed_song_name}\0icon\x1f${icon}\n" >> "$ROFI_SONGS_INPUT"
    done
}

# Extract the first image contained in a mp3 file using ffmpeg.
#
# Usage: extract_mp3_image INPUT_FILE OUTPUT_FILE
#
# Args:
#   INPUT_FILE: The mp3 file that contains the image.
#   OUTPUT_FILE: The output path for the image.
extract_mp3_image() {
    if ffmpeg                                                                       \
           -i "$1"                                                                  \
           -an                                                                      \
           -y                                                                       \
           -vf scale=${ICON_SIZE}:${ICON_SIZE}:force_original_aspect_ratio=decrease \
           -frames:v 1                                                              \
           -map '0:v?'                                                              \
           -loglevel 0                                                              \
           "$2"
    then
        log "generated " $(basename "$2")
    fi
}

generate_thumbs() {
    if [ -e "$THUMBS_CACHE_DIR" ]; then
        rm --recursive --verbose "$THUMBS_CACHE_DIR"
    fi
    mkdir --parents --verbose $THUMBS_CACHE_DIR
    log "generating thumbnails..."
    IFS=$'\n'
    for song in $(list_songs); do
        song_name=$(basename "$song")
        extract_mp3_image "$song" "${THUMBS_CACHE_DIR}/${song_name}.jpg" &
    done
    wait
}

if [ -z $1 ]; then
    albums=$(list_albums)

    selected_album=$(cat "$ROFI_ALBUMS_INPUT" | rofi -dmenu -no-custom $ROFI_PARAM)
    if [ -z "$selected_album" ]; then
        exit 0
    fi

    selected_album_path=$(echo "$albums" | grep "$selected_album\$")

    exec $MUSIC_PLAYER "$selected_album_path" &> /dev/null &
elif [ $1 = "--songs" -a -z $2 ]; then
    songs=$(list_songs)

    selected_song=$(cat "$ROFI_SONGS_INPUT" | rofi -dmenu -no-custom $ROFI_PARAM | cut -d "|" -f 2)
    if [ -z "$selected_song" ]; then
        exit 0
    fi

    selected_song_path=$(echo "$songs" | grep "$selected_song.mp3\$")

    exec $MUSIC_PLAYER "$selected_song_path" &> /dev/null &
elif [ $1 = "--generate-cache" -a -z $2 ]; then
    generate_rofi_albums_input
    generate_rofi_songs_input
    generate_thumbs
else
    echo "Usage: music-selector [OPTIONS]"
    echo
    echo "Choose music to play using rofi."
    echo
    echo "Options:"
    echo "  --generate-cache  Generate thumbnails, songs list and albums list"
    echo "  -h, --help        Print this help message."
fi
